[package]
name = "loose-sqlparser"
version = "0.3.0"
edition = "2021"
license = "Apache-2.0 OR MIT"
repository = "https://github.com/squill-app/loose-sqlparser-rs"
keywords = [
    "database",
    "postgres",
    "postgresql",
    "sqlite",
    "duckdb",
    "mysql",
    "mariadb",
    "sqlite",
    "sql",
    "parser",
]
categories = ["database"]
authors = ["Philippe Shampanier <pshampanier@gmail.com>"]

# This package has no dependencies but the following are used to build the examples and benchmarks.
# They should be in the `dev-dependencies` section but they would be systematically included when running `cargo test`
# which is not desirable.
[dependencies]
criterion = { version = "0.5", optional = true}
sqlparser = { version = "0.50", optional = true }
terminal_size = { version = "0.3", optional = true }
serde = { version = "1.0", features = ["derive"], optional = true }
serde_json = { version = "1.0", optional = true }

# `benchmarks` and `examples` features are only used to build the examples and benchmarks. They are allowing to avoid
# a systematic inclusion of the dependencies when running `cargo test` which would increase the build time.
#
# `serialize` is used to serialize the AST to JSON by the `loose-sqlparser-wasm` crate.
[features]
benchmarks = ["criterion", "sqlparser"]
examples = ["terminal_size"]
serialize = ["serde", "serde_json"]

# Benchmarks againts `sqlparser`.
#
# To run the benchmarks, use the following command:
# ```sh
# cargo bench --features benchmarks -- --quiet
# ```
[[bench]]
name = "sqlparser"
harness = false
required-features = ["benchmarks"]

# Example CLI tool.
#
# To run the CLI tool, use the following command:
# ```sh
# cargo run --features examples --example cli FILENAME.sql
# ```
[[example]]
name = "cli"
required-features = ["examples"]
